**********Notes************************************************************
git checkout [ID] -> what version to revert to
git clone [url] -> cloning a repository
git diff [commit ID] [commit ID] -> compare the two versions
git log -> list the recent commits
	q - to quit -> Exiting git log
git config --global color.ui auto -> Getting colored output
***************************************************************************

How did viewing a diff between two versions of a file help you see the bug that was introduced?
	It was easier to find the location of the error because the diff pinpointed the location of every change between the two files.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	It makes reverting back to older versions of code simple as oppose to commenting out a whole section of code which would make the code difficult to manage or remembering where all the changes were made and reverting the code back manually.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
	

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?


How can you use the commands git log and git diff to view the history of files?


How might using version control make you more confident to make changes that could break something?


Now that you have your workspace set up, what do you want to try using Git for?


